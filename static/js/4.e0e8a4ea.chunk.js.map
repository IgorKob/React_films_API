{"version":3,"sources":["components/UI/Progress.js","components/UI/Alert.js","components/UI/Pagination.js","components/UI/List.js","components/UI/Card.js","components/UI/Modal.js","components/UI/ListItem.js","components/UI/Select.js","components/CharactersPage/index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","marginLeft","spacing","Progress","classes","className","CircularProgress","width","marginTop","Alert","props","elevation","variant","AlertApp","severity","Nav","styled","div","PaginationApp","page","setPage","maxPage","Pagination","count","onChange","event","value","color","maxWidth","backgroundColor","palette","background","paper","AlignItemsList","List","children","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","red","CardApp","imgSrc","imgAlt","title","subTitle","date","text1","text2","text3","text4","handleClose","React","useState","expanded","setExpanded","d","Date","dateFinish","getDate","getMonth","getFullYear","Card","CardHeader","Avatar","alt","src","action","IconButton","aria-label","onClick","subheader","CardContent","Typography","component","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","modal","alignItems","border","boxShadow","shadows","padding","Fade","forwardRef","ref","open","onEnter","onExited","other","onClose","openModal","style","useSpring","from","opacity","to","onStart","onRest","SpringModal","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","inline","ListItemApp","textBold","text","ell","setOpen","ListItem","ListItemAvatar","ListItemText","primary","secondary","Fragment","Divider","formControl","margin","minWidth","SelectApp","arr","setValue","FormControl","InputLabel","id","Select","labelId","target","map","el","MenuItem","FormHelperText","Characters","species","setSpecies","status","setStatus","gender","setGender","dispatch","useDispatch","pending","useSelector","state","character","error","pages","results","useEffect","type","CHARACTER_FETCH","image","name","location","created","origin"],"mappings":"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","file":"static/js/4.e0e8a4ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Progress() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n      },\r\n  },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AlertApp = () => {\r\n  const classes = useStyles();\r\n  return <Alert severity=\"error\">An error occurred, reload the page!</Alert>\r\n}\r\nexport default AlertApp;\r\n\r\nAlertApp.propTypes = {\r\n  mess: PropTypes.string,\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport styled from 'styled-components';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  justify-content: center; \r\n`;\r\n\r\nexport default function PaginationApp({page, setPage, maxPage}) {\r\n  const classes = useStyles();\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <Nav className={classes.root}>\r\n      <Pagination count={maxPage} page={page} onChange={handleChange} color=\"primary\" />\r\n    </Nav>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function AlignItemsList(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.children}\r\n    </List>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function CardApp({imgSrc, imgAlt, title, subTitle, date, text1, text2, text3, text4, handleClose}) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  // debugger\r\n\r\n  const d = new Date(date);\r\n  const dateFinish = `${d.getDate()},${d.getMonth() + 1},${d.getFullYear()}`;\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n        //     R\r\n        //   </Avatar>\r\n          <Avatar alt={imgAlt} src={imgSrc} />\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\" onClick={handleClose}>\r\n            {/* <MoreVertIcon /> */}\r\n            X\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={`${subTitle} - ${dateFinish}`}\r\n      />\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        image=\"/static/images/cards/paella.jpg\"\r\n        title=\"Paella dish\"\r\n      /> */}\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          The species of the character: {text1}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          The gender of the character: {text2}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Name and link to the character's origin location: {text3}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>{title}:</Typography>\r\n          <Typography paragraph>\r\n            Name and link to the character's last known location endpoint: {text4}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { animated, useSpring } from '@react-spring/web';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, onClose, openModal,...other } = props;\r\n  debugger\r\n\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool.isRequired,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nexport default function SpringModal({children, open, handleClose}) {\r\n    debugger\r\n  const classes = useStyles();\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   const handleOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {/* <button type=\"button\" onClick={handleOpen}>\r\n        react-spring\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n        // open={openModal}\r\n        // onClose={onClose}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {/* <h2 id=\"spring-modal-title\">Spring modal</h2> */}\r\n            {/* <p id=\"spring-modal-description\">react-spring animates me.</p> */}\r\n            {children}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from './Card';\r\nimport Modal from './Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function ListItemApp(props) {\r\n  const classes = useStyles();\r\n  const {imgSrc, imgAlt, title, textBold, text, subTitle, date, text1, text2, text3, text4, ell} = props;\r\n// debugger\r\n// console.log(ell.id)\r\n  // modal\r\n  // const [openModal, setOpenModal] = React.useState(false);\r\n  // const handleModalOpen = () => {\r\n  //   setOpenModal(true);\r\n  // };\r\n  // const handleModalClose = () => {\r\n  //   setOpenModal(false);\r\n  // };\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <ListItem alignItems=\"flex-start\" onClick={handleOpen}>\r\n        <ListItemAvatar>\r\n          <Avatar alt={imgAlt} src={imgSrc} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={title}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                {textBold}\r\n              </Typography>\r\n              {` — ${text}`}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      {/* {children} */}\r\n      <Modal open={open} handleClose={handleClose}>\r\n        <Card imgSrc={imgSrc} \r\n          imgAlt={imgAlt}\r\n          title={title} \r\n          subTitle={subTitle} \r\n          date={date}\r\n          text1={text1}\r\n          text2={text2}\r\n          text3={text3}\r\n          text4={text4}\r\n          handleClose={handleClose}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function SelectApp({arr, title, subTitle, value, setValue}) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id={title}>{title}</InputLabel>\r\n        <Select\r\n          labelId={title}\r\n          id={title + 1}\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {arr.map(el => (<MenuItem key={el} value={el}>{el}</MenuItem>))}\r\n        </Select>\r\n        <FormHelperText>{subTitle}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CHARACTER_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport List from '../UI/List';\r\nimport ListItem from '../UI/ListItem';\r\nimport Select from '../UI/Select';\r\nimport Modal from '../UI/Modal';\r\nimport Card from '../UI/Card';\r\n\r\n\r\n  \r\nconst Characters = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [species, setSpecies] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.character.pending);\r\n  const error = useSelector(state => state.character.error);\r\n  const pages = useSelector(state => state.character.pages);\r\n  const count = useSelector(state => state.character.count);\r\n  const results = useSelector(state => state.character.results); // []\r\n// debugger\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CHARACTER_FETCH, page, species, status, gender})\r\n  }, [page, species, status, gender]);\r\n\r\n  // filter\r\n  const speciesArr = ['Human', 'Humanoid', 'Alien', 'Poopybutthole', 'Animal', 'Cronenberg', 'Disease', 'unknown'];\r\n  const statusArr = ['Alive', 'Dead', 'unknown'];\r\n  const genderArr = ['Female', 'Male', 'Genderless', 'unknown'];\r\n\r\n  // // modal\r\n  // const [openModal, setOpenModal] = React.useState(false);\r\n  // const handleModalOpen = () => {\r\n  //   setOpenModal(true);\r\n  // };\r\n  // const handleModalClose = () => {\r\n  //   setOpenModal(false);\r\n  // };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n\r\n        <Select arr={speciesArr} \r\n          title='Species' \r\n          subTitle='Filter by species' \r\n          setValue={setSpecies}\r\n          value={species} \r\n        />\r\n        \r\n        <Select arr={statusArr} \r\n          title='Status' \r\n          subTitle='Filter by status' \r\n          setValue={setStatus}\r\n          value={status} \r\n        />      \r\n\r\n        <Select arr={genderArr} \r\n          title='Sender' \r\n          subTitle='Filter by gender' \r\n          setValue={setGender}\r\n          value={gender} \r\n        />        \r\n\r\n\r\n        <List>\r\n          {results.map(el => (<React.Fragment key={el.id} >\r\n              {/* <ListItem  imgSrc={el.image}\r\n                imgAlt={el.name} \r\n                title={el.name} \r\n                textBold={el.species} \r\n                text={el.location.name} \r\n                onClick={handleModalOpen}\r\n              /> */}\r\n              {/* <Modal onClose={handleModalClose} open={openModal}> */}\r\n              <ListItem  imgSrc={el.image}\r\n                imgAlt={el.name} \r\n                title={el.name} \r\n                textBold={el.species} \r\n                text={el.location.name} \r\n                // onClick={handleModalOpen}\r\n                subTitle={el.status} \r\n                date={el.created}\r\n                text1={el.species}\r\n                text2={el.gender}\r\n                text3={el.origin.name}\r\n                text4={el.location.name}\r\n                ell={el}\r\n              />   \r\n                {/* <Modal onClose={handleModalClose}> */}\r\n                {/* <Modal>\r\n                  <Card imgSrc={el.image} \r\n                    imgAlt={el.name}\r\n                    title={el.name} \r\n                    subTitle={el.status} \r\n                    date={el.created}\r\n                    text1={el.species}\r\n                    text2={el.gender}\r\n                    text3={el.origin.name}\r\n                    text4={el.location.name}\r\n                  />\r\n                </Modal> */}\r\n              {/* </ListItem> */}\r\n\r\n\r\n\r\n            </React.Fragment>))}\r\n        </List>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n\r\n      </>)}\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Characters;"],"sourceRoot":""}