{"version":3,"sources":["components/UI/TypographyH.js","components/UI/List.js","components/UI/Input.js","components/UI/Button.js","components/UI/CheckboxListItem.js","components/ProfilePage/index.js"],"names":["theme","createMuiTheme","TypographyH","hn","text","variant","align","responsiveFontSizes","useStyles","makeStyles","wrap","width","display","justifyContent","root","maxWidth","backgroundColor","palette","background","paper","AlignItemsList","props","classes","className","children","margin","spacing","Input","value","handleChange","noValidate","autoComplete","TextField","onChange","id","label","button","ButtonApp","handleClick","Button","color","endIcon","Icon","onClick","CheckboxListItem","indexId","index","checked","Fragment","ListItem","role","undefined","dense","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","Profile","useState","episode","setEpisode","episodes","setEpisodes","dispatch","useDispatch","results","useSelector","state","profile","nameDB","useEffect","type","GET_LOCALSTORAGE","length","SET_LOCALSTORAGE","removeClick","filter","el","index2","checkedClick","newResults","map","target","List","React","memo"],"mappings":"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","file":"static/js/10.b9b07f71.chunk.js","sourcesContent":["import React from 'react';\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default function TypographyH({hn, text}) {\r\n  return (\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant={hn} align='center'>{text}</Typography>\r\n      </ThemeProvider>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function AlignItemsList(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.wrap}>\r\n      <List className={classes.root}>\r\n        {props.children}\r\n      </List>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nexport default function Input({value, handleChange, text}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField value={value} onChange={handleChange} id=\"standard-basic\" label={text} />\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ButtonApp({value, handleClick}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<Icon>send</Icon>}\r\n        onClick={handleClick}\r\n      >\r\n        {value} \r\n      </Button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function CheckboxListItem({indexId, index, text, onChange, checked, onClick}) {\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem key={indexId} role={undefined} dense button>\r\n        <ListItemIcon>\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={checked}\r\n            tabIndex={-1}\r\n            disableRipple\r\n            inputProps={{ 'aria-labelledby': indexId }}\r\n            onChange={() => onChange(index)}\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText id={indexId} primary={text} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onClick(index)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n        </ListItem>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GET_LOCALSTORAGE, SET_LOCALSTORAGE } from '../../redux/actionTypes';\r\nimport Input from '../UI/Input';\r\nimport Button from '../UI/Button';\r\nimport CheckboxListItem from '../UI/CheckboxListItem';\r\nimport List from '../UI/List';\r\nimport TypographyH from '../UI/TypographyH';\r\n\r\nconst Profile = () => {\r\n  const [episode , setEpisode] = useState('');\r\n  const [episodes , setEpisodes] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const results = useSelector(state => state.profile.results);\r\n\r\n  const nameDB = 'episodes';   // LocalStorage name\r\n  useEffect(() => {\r\n    dispatch({type: GET_LOCALSTORAGE, nameDB})\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (episodes.length > 0) {\r\n      dispatch({type: SET_LOCALSTORAGE, nameDB, episodes})\r\n    }\r\n  }, [episodes]);\r\n\r\n  const handleChange = ({target}) => {\r\n    setEpisode(target.value)\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (episode) {\r\n      setEpisodes([...results, {episode: episode, checked: false}]);\r\n      setEpisode('');\r\n    }\r\n  };\r\n \r\n  const removeClick = (index) => {\r\n    const episodes = results.filter((el, index2) => index2 !== index);\r\n    setEpisodes(episodes);\r\n    dispatch({type: SET_LOCALSTORAGE, nameDB, episodes})\r\n  };\r\n\r\n  const checkedClick = (index) => {\r\n    const newResults = results.map((el, index2) => {\r\n      if (index2 === index) {return ({episode: el.episode, checked: !el.checked})}\r\n      return el;\r\n    });\r\n    setEpisodes(newResults);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <TypographyH hn='h5' text={'Add new episode to watch later'}/>\r\n      <Input value={episode} handleChange={handleChange} text={'Add new episode'}/>\r\n      <Button value='Add new episode' handleClick={handleClick}/>\r\n      {results.length === 0 \r\n        ? (<TypographyH hn='h5' text={\"You don't have the series to watch later!\"}/>) \r\n        : (<List>\r\n          {results.map((el, index) => (<React.Fragment key={index}>\r\n              <CheckboxListItem indexId={`ListItem${index}`}\r\n                index={index} \r\n                text={el.episode}\r\n                onChange={checkedClick}\r\n                checked={el.checked}\r\n                onClick={removeClick}\r\n              />\r\n            </React.Fragment>))}\r\n          </List>\r\n        )} \r\n    </main>\r\n  ); \r\n}\r\nexport default React.memo(Profile);"],"sourceRoot":""}