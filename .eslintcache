[{"D:\\Weather_API\\React_Weather_API\\src\\index.js":"1","D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js":"2","D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js":"3","D:\\Weather_API\\React_Weather_API\\src\\api\\api.js":"4","D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js":"5","D:\\FilmApi\\project\\src\\index.js":"6","D:\\FilmApi\\project\\src\\App.js":"7","D:\\FilmApi\\project\\src\\reportWebVitals.js":"8","D:\\FilmApi\\project\\src\\Redux\\store.js":"9","D:\\FilmApi\\project\\src\\components\\Nav\\index.js":"10","D:\\FilmApi\\project\\src\\components\\Main\\index.js":"11","D:\\FilmApi\\project\\src\\components\\Nav\\styles.js":"12","D:\\FilmApi\\project\\src\\redux\\store.js":"13","D:\\FilmApi\\project\\src\\redux\\sagas\\index.js":"14","D:\\FilmApi\\project\\src\\redux\\reducers\\index.js":"15","D:\\FilmApi\\project\\src\\redux\\reducers\\characterReducer.js":"16","D:\\FilmApi\\project\\src\\redux\\sagas\\characterSaga.js":"17","D:\\FilmApi\\project\\src\\redux\\actionTypes\\index.js":"18","D:\\FilmApi\\project\\src\\api\\index.js":"19","D:\\FilmApi\\project\\src\\components\\UI\\Progress.js":"20","D:\\FilmApi\\project\\src\\components\\UI\\Alert.js":"21","D:\\FilmApi\\project\\src\\components\\UI\\List.js":"22","D:\\FilmApi\\project\\src\\components\\UI\\Pagination.js":"23","D:\\FilmApi\\project\\src\\components\\CharactersPage\\index.js":"24","D:\\FilmApi\\project\\src\\components\\EpisodesPage\\index.js":"25","D:\\FilmApi\\project\\src\\components\\LocationsPage\\index.js":"26","D:\\FilmApi\\project\\src\\components\\ProfilePage\\index.js":"27","D:\\FilmApi\\project\\src\\components\\UI\\Select.js":"28","D:\\FilmApi\\project\\src\\components\\UI\\Card.js":"29","D:\\FilmApi\\project\\src\\components\\CharactersPage\\ListItem.js":"30","D:\\FilmApi\\project\\src\\components\\CharactersPage\\Modal.js":"31","D:\\FilmApi\\project\\src\\redux\\reducers\\episodeReducer.js":"32","D:\\FilmApi\\project\\src\\redux\\reducers\\allReducer.js":"33","D:\\FilmApi\\project\\src\\redux\\sagas\\episodeSaga.js":"34","D:\\FilmApi\\project\\src\\components\\UI\\Table.js":"35","D:\\FilmApi\\project\\src\\redux\\sagas\\locationSaga.js":"36","D:\\FilmApi\\project\\src\\redux\\reducers\\locationReducer.js":"37","D:\\FilmApi\\project\\src\\redux\\sagas\\profileSaga.js":"38","D:\\FilmApi\\project\\src\\redux\\reducers\\profileReducer.js":"39","D:\\FilmApi\\project\\src\\components\\UI\\Input.js":"40","D:\\FilmApi\\project\\src\\components\\UI\\Button.js":"41","D:\\FilmApi\\project\\src\\components\\UI\\CheckboxListItem.js":"42","D:\\FilmApi\\project\\src\\components\\UI\\TypographyH.js":"43"},{"size":511,"mtime":1610225130754,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":3719,"mtime":1610236747758,"results":"47","hashOfConfig":"45"},{"size":537,"mtime":1610212142125,"results":"48","hashOfConfig":"45"},{"size":1363,"mtime":1610206955920,"results":"49","hashOfConfig":"45"},{"size":511,"mtime":1612991205506,"results":"50","hashOfConfig":"51"},{"size":374,"mtime":1612991108001,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":390,"mtime":1612800688751,"results":"54","hashOfConfig":"55"},{"size":3966,"mtime":1612998942442,"results":"56","hashOfConfig":"51"},{"size":991,"mtime":1613009280155,"results":"57","hashOfConfig":"51"},{"size":1754,"mtime":1612998642520,"results":"58","hashOfConfig":"51"},{"size":390,"mtime":1612800688751,"results":"59","hashOfConfig":"51"},{"size":765,"mtime":1612971956796,"results":"60","hashOfConfig":"51"},{"size":528,"mtime":1612968333734,"results":"61","hashOfConfig":"51"},{"size":569,"mtime":1612995316148,"results":"62","hashOfConfig":"51"},{"size":847,"mtime":1613003998084,"results":"63","hashOfConfig":"51"},{"size":582,"mtime":1612975473038,"results":"64","hashOfConfig":"51"},{"size":1261,"mtime":1612995429617,"results":"65","hashOfConfig":"51"},{"size":506,"mtime":1612801745927,"results":"66","hashOfConfig":"51"},{"size":406,"mtime":1612996443445,"results":"67","hashOfConfig":"51"},{"size":614,"mtime":1612989682320,"results":"68","hashOfConfig":"51"},{"size":730,"mtime":1612807665303,"results":"69","hashOfConfig":"51"},{"size":3350,"mtime":1613003311945,"results":"70","hashOfConfig":"51"},{"size":2960,"mtime":1613003322290,"results":"71","hashOfConfig":"51"},{"size":3457,"mtime":1613004085381,"results":"72","hashOfConfig":"51"},{"size":2414,"mtime":1612999528928,"results":"73","hashOfConfig":"51"},{"size":1258,"mtime":1613000006197,"results":"74","hashOfConfig":"51"},{"size":3175,"mtime":1612996064197,"results":"75","hashOfConfig":"51"},{"size":1992,"mtime":1612995572606,"results":"76","hashOfConfig":"51"},{"size":1928,"mtime":1612893871241,"results":"77","hashOfConfig":"51"},{"size":566,"mtime":1612995350801,"results":"78","hashOfConfig":"51"},{"size":589,"mtime":1612901885343,"results":"79","hashOfConfig":"51"},{"size":930,"mtime":1613003979403,"results":"80","hashOfConfig":"51"},{"size":1757,"mtime":1612998392348,"results":"81","hashOfConfig":"51"},{"size":1003,"mtime":1613003784394,"results":"82","hashOfConfig":"51"},{"size":567,"mtime":1612995371545,"results":"83","hashOfConfig":"51"},{"size":1076,"mtime":1613003944759,"results":"84","hashOfConfig":"51"},{"size":611,"mtime":1612996325850,"results":"85","hashOfConfig":"51"},{"size":626,"mtime":1612979477523,"results":"86","hashOfConfig":"51"},{"size":725,"mtime":1612996026722,"results":"87","hashOfConfig":"51"},{"size":1250,"mtime":1612996537290,"results":"88","hashOfConfig":"51"},{"size":452,"mtime":1612999841288,"results":"89","hashOfConfig":"51"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11wfe9v",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hf1b34",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"1wgjgja",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Weather_API\\React_Weather_API\\src\\index.js",[],"D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js",["196"],"D:\\Weather_API\\React_Weather_API\\src\\api\\api.js",["197"],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js",["198"],"D:\\FilmApi\\project\\src\\index.js",[],"D:\\FilmApi\\project\\src\\App.js",[],"D:\\FilmApi\\project\\src\\reportWebVitals.js",[],"D:\\FilmApi\\project\\src\\Redux\\store.js",["199"],"import React from 'react';\r\nimport weather_reducer from './weather_reducer';\r\nimport geolocation_reducer from './geolocation_reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport errorMess_reducer from './errorMess_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    geolocation: geolocation_reducer,\r\n    weather: weather_reducer,\r\n    errorMess: errorMess_reducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nwindow.store = store;",["200","201"],"D:\\FilmApi\\project\\src\\components\\Nav\\index.js",[],"D:\\FilmApi\\project\\src\\components\\Main\\index.js",[],"D:\\FilmApi\\project\\src\\components\\Nav\\styles.js",["202"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: 0,\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    // flexGrow: 1,\r\n    padding: 0,\r\n  },\r\n  mylogo: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));","D:\\FilmApi\\project\\src\\redux\\store.js",["203"],"import React from 'react';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport rootReducer from './reducers';\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nwindow.store = store;","D:\\FilmApi\\project\\src\\redux\\sagas\\index.js",["204"],"import React from 'react'\r\nimport { takeEvery } from 'redux-saga/effects'\r\nimport { CHARACTER_FETCH, EPISODE_FETCH, LOCATION_FETCH, GET_LOCALSTORAGE, SET_LOCALSTORAGE } from '../actionTypes';\r\nimport { characterSaga } from './characterSaga';\r\nimport { episodeSaga } from './episodeSaga';\r\nimport { locationSaga } from './locationSaga';\r\nimport { getLocalStorageSaga } from './profileSaga';\r\nimport { setLocalStorageSaga } from './profileSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(CHARACTER_FETCH, characterSaga);\r\n    yield takeEvery(EPISODE_FETCH, episodeSaga);\r\n    yield takeEvery(LOCATION_FETCH, locationSaga);\r\n    yield takeEvery(GET_LOCALSTORAGE, getLocalStorageSaga);\r\n    yield takeEvery(SET_LOCALSTORAGE, setLocalStorageSaga);\r\n}","D:\\FilmApi\\project\\src\\redux\\reducers\\index.js",["205"],"import React from 'react'\r\nimport { combineReducers } from 'redux';\r\nimport characterReducer from './characterReducer';\r\nimport episodeReducer from './episodeReducer';\r\nimport locationReducer from './locationReducer';\r\nimport profileReducer from './profileReducer';\r\nimport allReducer from './allReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    character: characterReducer,\r\n    episode: episodeReducer,\r\n    location: locationReducer,\r\n    profile: profileReducer,\r\n    all: allReducer,\r\n});\r\nexport default rootReducer;","D:\\FilmApi\\project\\src\\redux\\reducers\\characterReducer.js",["206"],"import React from 'react'\r\nimport { SET_CHARACTER } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    pages: 0,\r\n    count: 0,\r\n    results: [],\r\n};\r\n\r\nexport default function characterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CHARACTER:\r\n            return {\r\n                ...state,\r\n                pages: action.payload.info.pages,\r\n                count: action.payload.info.count,\r\n                results: [...action.payload.results], \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\sagas\\characterSaga.js",["207"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { characterFetch } from \"../../api\"\r\nimport { SET_CHARACTER, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* characterSaga({page, species, status, gender}) {\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(characterFetch, page, species, status, gender)\r\n        if (response.status === 200) {\r\n            yield put({ type: SET_CHARACTER, payload: response.data })\r\n            yield put({ type: SET_ERROR_MESS, payload: ''})\r\n        } else {\r\n            yield put({ type: SET_ERROR_MESS, payload: response.data.message })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.error })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\redux\\actionTypes\\index.js",[],"D:\\FilmApi\\project\\src\\api\\index.js",["208"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://rickandmortyapi.com/api/',\r\n});\r\n\r\nexport const characterFetch = (page, species, status, gender) => {\r\n  return instance.get(`character?page=${page}&species=${species}&status=${status}&gender=${gender}`)\r\n}\r\n\r\nexport const episodeFetch = (page, name, episode) => {\r\n  return instance.get(`episode?page=${page}&name=${name}&episode=${episode}`)\r\n}\r\n\r\nexport const locationFetch = (page, name, type, dimension) => {\r\n  return instance.get(`location?page=${page}&name=${name}&type=${type}&dimension=${dimension}`)\r\n}\r\n\r\n// LocalStorage\r\nexport const getLocalStorageFetch = (nameDB) => {\r\n  return JSON.parse(localStorage.getItem(nameDB))\r\n}\r\nexport const setLocalStorageFetch = (nameDB, episodes) => {\r\n  localStorage.setItem(nameDB, JSON.stringify(episodes));\r\n}\r\n\r\n// const baseURL = 'https://rickandmortyapi.com/api/';\r\n\r\n// export const characterFetch = async (page, species, status, gender) => {\r\n//   const response = await  fetch(`${baseURL}character?page=${page}&species=${species}&status=${status}&gender=${gender}`)\r\n//   const result = await response.json();\r\n//   return  result;\r\n// }\r\n\r\n","D:\\FilmApi\\project\\src\\components\\UI\\Progress.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Alert.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\List.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Pagination.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\index.js",["209","210"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CHARACTER_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport List from '../UI/List';\r\nimport ListItem from './ListItem';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TypographyH from '../UI/TypographyH';\r\n\r\nconst Characters = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [species, setSpecies] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.character.pages);\r\n  const results = useSelector(state => state.character.results); \r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n    dispatch({type: CHARACTER_FETCH, page: 1, species, status, gender})\r\n  }, [species, status, gender]);\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CHARACTER_FETCH, page, species, status, gender})\r\n  }, [page]);\r\n\r\n  // filter\r\n  const speciesArr = ['Human', 'Humanoid', 'Alien', 'Poopybutthole', 'Animal', 'Cronenberg', 'Disease', 'unknown'];\r\n  const statusArr = ['Alive', 'Dead', 'unknown'];\r\n  const genderArr = ['Female', 'Male', 'Genderless', 'unknown'];\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <TypographyH hn='h2' text={'Characters'}/>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={speciesArr} \r\n              title='Species' \r\n              subTitle='Filter by species' \r\n              setValue={setSpecies}\r\n              value={species} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={statusArr} \r\n              title='Status' \r\n              subTitle='Filter by status' \r\n              setValue={setStatus}\r\n              value={status} \r\n            />    \r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={genderArr} \r\n              title='Sender' \r\n              subTitle='Filter by gender' \r\n              setValue={setGender}\r\n              value={gender} \r\n            />  \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <List>\r\n          {results.map(el => (<React.Fragment key={el.id} >\r\n              <ListItem  imgSrc={el.image}\r\n                imgAlt={el.name} \r\n                title={el.name} \r\n                textBold={el.species} \r\n                text={el.location.name} \r\n                subTitle={el.status} \r\n                date={el.created}\r\n                text1={`The species of the character: ${el.species}`}\r\n                text2={`The gender of the character: ${el.gender}`}\r\n                text3={`Name and link to the character's origin location: ${el.origin.name}`}\r\n                text4={`Name and link to the character's last known location endpoint: ${el.location.name}`}\r\n              />   \r\n            </React.Fragment>))}\r\n        </List>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\nexport default Characters;","D:\\FilmApi\\project\\src\\components\\EpisodesPage\\index.js",["211","212"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EPISODE_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableApp from '../UI/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TypographyH from '../UI/TypographyH';\r\n\r\nconst Episodes = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [name, setName] = useState('');\r\n  const [episode, setEpisode] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.episode.pages);\r\n  const results = useSelector(state => state.episode.results); \r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n    dispatch({type: EPISODE_FETCH, page: 1, name, episode})\r\n  }, [name, episode]);\r\n\r\n  useEffect(() => {\r\n    dispatch({type: EPISODE_FETCH, page, name, episode})\r\n  }, [page]);\r\n\r\n  // filter\r\n  const nameArr = results.map(el => el.name);\r\n  const episodeArr = results.map(el => el.episode);\r\n\r\n  // table\r\n  const tableTitleArr = ['The name of the episode', 'The air date of the episode', 'The code of the episode', 'Time at which the episode was created in the database'];\r\n  const tableArr = React.useMemo(() => {\r\n    return results.map(el => ({name: el.name, air_date: el.air_date, episode: el.episode, created: el.created}))\r\n  },[results]);\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <TypographyH hn='h2' text={'Episodes'}/>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={nameArr} \r\n              title='Name' \r\n              subTitle='Filter by name' \r\n              setValue={setName}\r\n              value={name} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={episodeArr} \r\n              title='Episode' \r\n              subTitle='Filter by episode' \r\n              setValue={setEpisode}\r\n              value={episode} \r\n            />    \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TableApp rows={tableArr} arr={tableTitleArr}>\r\n          {row => (<React.Fragment key={row.id}>\r\n              <TableCell>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.air_date}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.episode}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.created}\r\n              </TableCell></React.Fragment>)}\r\n        </TableApp>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\nexport default Episodes;","D:\\FilmApi\\project\\src\\components\\LocationsPage\\index.js",["213","214"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOCATION_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableApp from '../UI/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TypographyH from '../UI/TypographyH';\r\n\r\nconst Locations = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [name, setName] = useState('');\r\n  const [typeLocation, setTypeLocation] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.location.pages);\r\n  const results = useSelector(state => state.location.results); \r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n    dispatch({type: LOCATION_FETCH, page: 1, name, typeLocation, dimension})\r\n  }, [name, typeLocation, dimension]);\r\n\r\n  useEffect(() => {\r\n    dispatch({type: LOCATION_FETCH, page, name, typeLocation, dimension})\r\n  }, [page]);\r\n\r\n  // filter\r\n  const nameArr = [...new Set(results.map(el => el.name))];\r\n  const typeArr = [...new Set(results.map(el => el.type))];\r\n  const dimensionArr = [...new Set(results.map(el => el.dimension))];\r\n\r\n  // table\r\n  const tableTitleArr = ['The name of the location', 'The type of the location', 'The dimension in which the location is located', 'Time at which the location was created in the database'];\r\n  const tableArr = React.useMemo(() => {\r\n    return results.map(el => ({name: el.name, type: el.type, dimension: el.dimension, created: el.created}))\r\n  },[results]);\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <TypographyH hn='h2' text={'Locations'}/>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={nameArr} \r\n              title='Name' \r\n              subTitle='Filter by name' \r\n              setValue={setName}\r\n              value={name} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={typeArr} \r\n              title='Type' \r\n              subTitle='Filter by type' \r\n              setValue={setTypeLocation}\r\n              value={typeLocation} \r\n            />    \r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={dimensionArr} \r\n              title='Dimension' \r\n              subTitle='Filter by dimension' \r\n              setValue={setDimension}\r\n              value={dimension} \r\n            />    \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TableApp rows={tableArr} arr={tableTitleArr}>\r\n          {row => (<React.Fragment key={row.id}>\r\n              <TableCell>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.type}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.dimension}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.created}\r\n              </TableCell></React.Fragment>)}\r\n        </TableApp>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\nexport default Locations;","D:\\FilmApi\\project\\src\\components\\ProfilePage\\index.js",["215","216"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GET_LOCALSTORAGE, SET_LOCALSTORAGE } from '../../redux/actionTypes';\r\nimport Input from '../UI/Input';\r\nimport Button from '../UI/Button';\r\nimport CheckboxListItem from '../UI/CheckboxListItem';\r\nimport List from '../UI/List';\r\nimport TypographyH from '../UI/TypographyH';\r\n\r\nconst Profile = () => {\r\n  const [episode , setEpisode] = useState('');\r\n  const [episodes , setEpisodes] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const results = useSelector(state => state.profile.results);\r\n\r\n  const nameDB = 'episodes';   // LocalStorage name\r\n  useEffect(() => {\r\n    dispatch({type: GET_LOCALSTORAGE, nameDB})\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (episodes.length > 0) {\r\n      dispatch({type: SET_LOCALSTORAGE, nameDB, episodes})\r\n    }\r\n  }, [episodes]);\r\n\r\n  const handleChange = ({target}) => {\r\n    setEpisode(target.value)\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (episode) {\r\n      setEpisodes([...results, {episode: episode, checked: false}]);\r\n      setEpisode('');\r\n    }\r\n  };\r\n \r\n  const removeClick = (index) => {\r\n    const episodes = results.filter((el, index2) => index2 !== index);\r\n    setEpisodes(episodes);\r\n    dispatch({type: SET_LOCALSTORAGE, nameDB, episodes})\r\n  };\r\n\r\n  const checkedClick = (index) => {\r\n    const newResults = results.map((el, index2) => {\r\n      if (index2 === index) {return ({episode: el.episode, checked: !el.checked})}\r\n      return el;\r\n    });\r\n    setEpisodes(newResults);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <TypographyH hn='h5' text={'Add new episode to watch later'}/>\r\n      <Input value={episode} handleChange={handleChange} text={'Add new episode'}/>\r\n      <Button value='Add new episode' handleClick={handleClick}/>\r\n      {results.length === 0 \r\n        ? (<TypographyH hn='h5' text={\"You don't have the series to watch later!\"}/>) \r\n        : (<List>\r\n          {results.map((el, index) => (<React.Fragment key={index}>\r\n              <CheckboxListItem indexId={`ListItem${index}`}\r\n                index={index} \r\n                text={el.episode}\r\n                onChange={checkedClick}\r\n                checked={el.checked}\r\n                onClick={removeClick}\r\n              />\r\n            </React.Fragment>))}\r\n          </List>\r\n        )} \r\n    </main>\r\n  ); \r\n}\r\nexport default React.memo(Profile);","D:\\FilmApi\\project\\src\\components\\UI\\Select.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Card.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\ListItem.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\Modal.js",[],"D:\\FilmApi\\project\\src\\redux\\reducers\\episodeReducer.js",["217"],"import React from 'react'\r\nimport { SET_EPISODE } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    pages: 0,\r\n    count: 0,\r\n    results: [],\r\n};\r\n\r\nexport default function episodeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_EPISODE:\r\n            return {\r\n                ...state,\r\n                pages: action.payload.info.pages,\r\n                count: action.payload.info.count,\r\n                results: [...action.payload.results],    \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\reducers\\allReducer.js",["218"],"import React from 'react'\r\nimport { SET_IS_LOADING, SET_ERROR_MESS } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: '',\r\n};\r\n\r\nexport default function allReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                pending: !state.pending,\r\n            };\r\n        case SET_ERROR_MESS:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\sagas\\episodeSaga.js",["219"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { episodeFetch } from \"../../api\"\r\nimport { SET_EPISODE, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* episodeSaga({page, name, episode}) {\r\n    const encodeName = encodeURI(name);\r\n    const encodeEpisode = encodeURI(episode);\r\n    \r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(episodeFetch, page, encodeName, encodeEpisode)       \r\n        if (response.status === 200) {\r\n            yield put({ type: SET_EPISODE, payload: response.data })\r\n            yield put({ type: SET_ERROR_MESS, payload: ''})\r\n        } else {\r\n            yield put({ type: SET_ERROR_MESS, payload: response.data.message })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.error })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\components\\UI\\Table.js",[],"D:\\FilmApi\\project\\src\\redux\\sagas\\locationSaga.js",["220"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { locationFetch } from \"../../api\"\r\nimport { SET_LOCATION, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* locationSaga({page, name, typeLocation, dimension}) {\r\n    const encodeName = encodeURI(name);\r\n    const encodeType = encodeURI(typeLocation);\r\n    const encodeDimension = encodeURI(dimension);\r\n\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(locationFetch, page, encodeName, encodeType, encodeDimension)\r\n        yield put({ type: SET_ERROR_MESS, payload: ''})\r\n        if (response.status === 200) {\r\n            yield put({ type: SET_LOCATION, payload: response.data })\r\n        } else {\r\n            yield put({ type: SET_ERROR_MESS, payload: response.data.message })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.error })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\redux\\reducers\\locationReducer.js",["221"],"import React from 'react'\r\nimport { SET_LOCATION } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    pages: 0,\r\n    count: 0,\r\n    results: [],\r\n};\r\n\r\nexport default function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATION:\r\n            return {\r\n                ...state,\r\n                pages: action.payload.info.pages,\r\n                count: action.payload.info.count,\r\n                results: [...action.payload.results],  \r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\sagas\\profileSaga.js",["222"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { getLocalStorageFetch, setLocalStorageFetch } from \"../../api\"\r\nimport { SET_MY_WATCH_LIST, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* getLocalStorageSaga({nameDB}) {\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(getLocalStorageFetch, nameDB)\r\n        if (response) {\r\n            yield put({ type: SET_MY_WATCH_LIST, payload: response })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.message })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}\r\n\r\nexport function* setLocalStorageSaga({nameDB, episodes}) {\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        yield call(setLocalStorageFetch, nameDB, episodes)\r\n        yield put({ type: SET_MY_WATCH_LIST, payload: episodes })\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.message })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\redux\\reducers\\profileReducer.js",["223"],"import React from 'react'\r\nimport { SET_MY_WATCH_LIST, ADD_MY_WATCH_LIST } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    results: [],\r\n};\r\n\r\nexport default function profileReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_MY_WATCH_LIST:\r\n            return {\r\n                ...state,\r\n                results: action.payload,\r\n            };\r\n        case ADD_MY_WATCH_LIST:\r\n            return {\r\n                ...state,\r\n                results: [...state.results, ...action.payload],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\components\\UI\\Input.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Button.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\CheckboxListItem.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\TypographyH.js",[],{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":29,"column":6,"nodeType":"234","endLine":29,"endColumn":31,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":12,"suggestions":"237"},{"ruleId":"232","severity":1,"message":"233","line":28,"column":6,"nodeType":"234","endLine":28,"endColumn":21,"suggestions":"238"},{"ruleId":"232","severity":1,"message":"239","line":32,"column":6,"nodeType":"234","endLine":32,"endColumn":12,"suggestions":"240"},{"ruleId":"232","severity":1,"message":"233","line":29,"column":6,"nodeType":"234","endLine":29,"endColumn":37,"suggestions":"241"},{"ruleId":"232","severity":1,"message":"242","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":12,"suggestions":"243"},{"ruleId":"232","severity":1,"message":"233","line":19,"column":6,"nodeType":"234","endLine":19,"endColumn":8,"suggestions":"244"},{"ruleId":"232","severity":1,"message":"233","line":25,"column":6,"nodeType":"234","endLine":25,"endColumn":16,"suggestions":"245"},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":1,"column":8,"nodeType":"226","messageId":"227","endLine":1,"endColumn":13},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["246"],"no-negated-in-lhs",["247"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["248"],"React Hook useEffect has missing dependencies: 'dispatch', 'gender', 'species', and 'status'. Either include them or remove the dependency array.",["249"],["250"],"React Hook useEffect has missing dependencies: 'dispatch', 'episode', and 'name'. Either include them or remove the dependency array.",["251"],["252"],"React Hook useEffect has missing dependencies: 'dimension', 'dispatch', 'name', and 'typeLocation'. Either include them or remove the dependency array.",["253"],["254"],["255"],"no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [species, status, gender, dispatch]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, gender, page, species, status]",{"range":"274","text":"275"},"Update the dependencies array to be: [name, episode, dispatch]",{"range":"276","text":"277"},"Update the dependencies array to be: [dispatch, episode, name, page]",{"range":"278","text":"279"},"Update the dependencies array to be: [name, typeLocation, dimension, dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [dimension, dispatch, name, page, typeLocation]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},"Update the dependencies array to be: [dispatch, episodes]",{"range":"286","text":"287"},[1093,1118],"[species, status, gender, dispatch]",[1220,1226],"[dispatch, gender, page, species, status]",[1047,1062],"[name, episode, dispatch]",[1152,1158],"[dispatch, episode, name, page]",[1127,1158],"[name, typeLocation, dimension, dispatch]",[1265,1271],"[dimension, dispatch, name, page, typeLocation]",[744,746],"[dispatch]",[877,887],"[dispatch, episodes]"]