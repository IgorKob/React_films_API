[{"D:\\Weather_API\\React_Weather_API\\src\\index.js":"1","D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js":"2","D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js":"3","D:\\Weather_API\\React_Weather_API\\src\\api\\api.js":"4","D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js":"5","D:\\FilmApi\\project\\src\\index.js":"6","D:\\FilmApi\\project\\src\\App.js":"7","D:\\FilmApi\\project\\src\\reportWebVitals.js":"8","D:\\FilmApi\\project\\src\\Redux\\store.js":"9","D:\\FilmApi\\project\\src\\components\\Nav\\index.js":"10","D:\\FilmApi\\project\\src\\components\\Main\\index.js":"11","D:\\FilmApi\\project\\src\\components\\Nav\\styles.js":"12","D:\\FilmApi\\project\\src\\redux\\store.js":"13","D:\\FilmApi\\project\\src\\redux\\sagas\\index.js":"14","D:\\FilmApi\\project\\src\\redux\\reducers\\index.js":"15","D:\\FilmApi\\project\\src\\redux\\reducers\\characterReducer.js":"16","D:\\FilmApi\\project\\src\\redux\\sagas\\characterSaga.js":"17","D:\\FilmApi\\project\\src\\redux\\actionTypes\\index.js":"18","D:\\FilmApi\\project\\src\\api\\index.js":"19","D:\\FilmApi\\project\\src\\components\\UI\\Progress.js":"20","D:\\FilmApi\\project\\src\\components\\UI\\Alert.js":"21","D:\\FilmApi\\project\\src\\components\\UI\\List.js":"22","D:\\FilmApi\\project\\src\\components\\UI\\Pagination.js":"23","D:\\FilmApi\\project\\src\\components\\CharactersPage\\index.js":"24","D:\\FilmApi\\project\\src\\components\\EpisodesPage\\index.js":"25","D:\\FilmApi\\project\\src\\components\\LocationsPage\\index.js":"26","D:\\FilmApi\\project\\src\\components\\ProfilePage\\index.js":"27","D:\\FilmApi\\project\\src\\components\\UI\\Select.js":"28","D:\\FilmApi\\project\\src\\components\\UI\\Card.js":"29","D:\\FilmApi\\project\\src\\components\\CharactersPage\\ListItem.js":"30","D:\\FilmApi\\project\\src\\components\\CharactersPage\\Modal.js":"31","D:\\FilmApi\\project\\src\\redux\\reducers\\episodeReducer.js":"32","D:\\FilmApi\\project\\src\\redux\\reducers\\allReducer.js":"33","D:\\FilmApi\\project\\src\\redux\\sagas\\episodeSaga.js":"34","D:\\FilmApi\\project\\src\\components\\UI\\Table.js":"35"},{"size":511,"mtime":1610225130754,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":3719,"mtime":1610236747758,"results":"39","hashOfConfig":"37"},{"size":537,"mtime":1610212142125,"results":"40","hashOfConfig":"37"},{"size":1363,"mtime":1610206955920,"results":"41","hashOfConfig":"37"},{"size":517,"mtime":1612893181735,"results":"42","hashOfConfig":"43"},{"size":305,"mtime":1612794733181,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":390,"mtime":1612800688751,"results":"46","hashOfConfig":"43"},{"size":3853,"mtime":1612794269287,"results":"47","hashOfConfig":"43"},{"size":1155,"mtime":1612816142367,"results":"48","hashOfConfig":"43"},{"size":1784,"mtime":1612793256039,"results":"49","hashOfConfig":"43"},{"size":390,"mtime":1612800688751,"results":"50","hashOfConfig":"43"},{"size":417,"mtime":1612902250113,"results":"51","hashOfConfig":"43"},{"size":368,"mtime":1612901811849,"results":"52","hashOfConfig":"43"},{"size":1322,"mtime":1612902026937,"results":"53","hashOfConfig":"43"},{"size":788,"mtime":1612902054772,"results":"54","hashOfConfig":"43"},{"size":282,"mtime":1612902136237,"results":"55","hashOfConfig":"43"},{"size":2415,"mtime":1612919141498,"results":"56","hashOfConfig":"43"},{"size":506,"mtime":1612801745927,"results":"57","hashOfConfig":"43"},{"size":653,"mtime":1612803362198,"results":"58","hashOfConfig":"43"},{"size":470,"mtime":1612894613823,"results":"59","hashOfConfig":"43"},{"size":730,"mtime":1612807665303,"results":"60","hashOfConfig":"43"},{"size":3213,"mtime":1612903347668,"results":"61","hashOfConfig":"43"},{"size":2816,"mtime":1612918573325,"results":"62","hashOfConfig":"43"},{"size":2869,"mtime":1612918783808,"results":"63","hashOfConfig":"43"},{"size":134,"mtime":1612793868171,"results":"64","hashOfConfig":"43"},{"size":1143,"mtime":1612895622361,"results":"65","hashOfConfig":"43"},{"size":3171,"mtime":1612894214516,"results":"66","hashOfConfig":"43"},{"size":1986,"mtime":1612893883545,"results":"67","hashOfConfig":"43"},{"size":1928,"mtime":1612893871241,"results":"68","hashOfConfig":"43"},{"size":2703,"mtime":1612902815660,"results":"69","hashOfConfig":"43"},{"size":589,"mtime":1612901885343,"results":"70","hashOfConfig":"43"},{"size":980,"mtime":1612905907159,"results":"71","hashOfConfig":"43"},{"size":1590,"mtime":1612918541215,"results":"72","hashOfConfig":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11wfe9v",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1wgjgja",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"85"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"D:\\Weather_API\\React_Weather_API\\src\\index.js",[],"D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js",["159"],"D:\\Weather_API\\React_Weather_API\\src\\api\\api.js",["160"],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js",["161"],"D:\\FilmApi\\project\\src\\index.js",[],["162","163"],"D:\\FilmApi\\project\\src\\App.js",[],"D:\\FilmApi\\project\\src\\reportWebVitals.js",[],"D:\\FilmApi\\project\\src\\Redux\\store.js",["164"],"import React from 'react';\r\nimport weather_reducer from './weather_reducer';\r\nimport geolocation_reducer from './geolocation_reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport errorMess_reducer from './errorMess_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    geolocation: geolocation_reducer,\r\n    weather: weather_reducer,\r\n    errorMess: errorMess_reducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nwindow.store = store;",["165","166"],"D:\\FilmApi\\project\\src\\components\\Nav\\index.js",[],"D:\\FilmApi\\project\\src\\components\\Main\\index.js",[],"D:\\FilmApi\\project\\src\\components\\Nav\\styles.js",["167"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  mylogo: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));","D:\\FilmApi\\project\\src\\redux\\store.js",["168"],"import React from 'react';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport rootReducer from './reducers';\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nwindow.store = store;","D:\\FilmApi\\project\\src\\redux\\sagas\\index.js",["169"],"import React from 'react'\r\nimport { takeEvery } from 'redux-saga/effects'\r\nimport { CHARACTER_FETCH } from '../actionTypes';\r\nimport { EPISODE_FETCH } from '../actionTypes';\r\nimport { characterSaga } from './characterSaga';\r\nimport { episodeSaga } from './episodeSaga';\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(CHARACTER_FETCH, characterSaga);\r\n    yield takeEvery(EPISODE_FETCH, episodeSaga);\r\n}","D:\\FilmApi\\project\\src\\redux\\reducers\\index.js",["170"],"import React from 'react'\r\nimport { combineReducers } from 'redux';\r\nimport characterReducer from './characterReducer';\r\nimport episodeReducer from './episodeReducer';\r\nimport allReducer from './allReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    character: characterReducer,\r\n    episode: episodeReducer,\r\n    all: allReducer,\r\n});\r\nexport default rootReducer;","D:\\FilmApi\\project\\src\\redux\\reducers\\characterReducer.js",["171"],"import React from 'react'\r\n// import { SET_CHARACTER, SET_IS_LOADING, SET_ERROR_MESS } from '../actionTypes/index';\r\nimport { SET_CHARACTER } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    // pending: false,\r\n    // error: '',\r\n    pages: 0,\r\n    count: 0,\r\n    results: [\r\n        // {\r\n        //     id: null,\r\n        //     name: \"\",\r\n        //     status: \"\",\r\n        //     species: \"\",\r\n        //     type: \"\",\r\n        //     gender: \"\",\r\n        //     origin: {\r\n        //         name: \"\",\r\n        //         url: \"\"\r\n        //     },\r\n        //     location: {\r\n        //         name: \"\",\r\n        //         url: \"\"\r\n        //     },\r\n        //     image: \"\",\r\n        //     episode: [\r\n        //         \"\",\r\n        //         \"\"\r\n        //     ],\r\n        //     url: \"\",\r\n        //     created: \"\"\r\n        // },\r\n    ],\r\n};\r\n\r\nexport default function characterReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CHARACTER:\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                pages: action.payload.info.pages,\r\n                count: action.payload.info.count,\r\n                results: [...action.payload.results],     // []  20\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\sagas\\characterSaga.js",["172"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { characterFetch } from \"../../api\"\r\nimport { SET_CHARACTER, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* characterSaga({page, species, status, gender}) {\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(characterFetch, page, species, status, gender)\r\n        if (response.status === 200) {\r\n            yield put({ type: SET_CHARACTER, payload: response.data })\r\n        } else {\r\n            yield put({ type: SET_ERROR_MESS, payload: response.data.message })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.message })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\redux\\actionTypes\\index.js",[],"D:\\FilmApi\\project\\src\\api\\index.js",["173"],"D:\\FilmApi\\project\\src\\components\\UI\\Progress.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Alert.js",["174"],"import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n      },\r\n  },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AlertApp = () => {\r\n  const classes = useStyles();\r\n  return <Alert severity=\"error\">An error occurred, reload the page!</Alert>\r\n}\r\nexport default AlertApp;\r\n\r\nAlertApp.propTypes = {\r\n  mess: PropTypes.string,\r\n};","D:\\FilmApi\\project\\src\\components\\UI\\List.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Pagination.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\index.js",["175","176"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CHARACTER_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport List from '../UI/List';\r\nimport ListItem from './ListItem';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\n  \r\nconst Characters = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [species, setSpecies] = useState('');\r\n  const [status, setStatus] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.character.pages);\r\n  const count = useSelector(state => state.character.count);\r\n  const results = useSelector(state => state.character.results); // []\r\n// debugger\r\n\r\n  useEffect(() => {\r\n    dispatch({type: CHARACTER_FETCH, page, species, status, gender})\r\n  }, [page, species, status, gender]);\r\n\r\n  // filter\r\n  const speciesArr = ['Human', 'Humanoid', 'Alien', 'Poopybutthole', 'Animal', 'Cronenberg', 'Disease', 'unknown'];\r\n  const statusArr = ['Alive', 'Dead', 'unknown'];\r\n  const genderArr = ['Female', 'Male', 'Genderless', 'unknown'];\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={speciesArr} \r\n              title='Species' \r\n              subTitle='Filter by species' \r\n              setValue={setSpecies}\r\n              value={species} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={statusArr} \r\n              title='Status' \r\n              subTitle='Filter by status' \r\n              setValue={setStatus}\r\n              value={status} \r\n            />    \r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={genderArr} \r\n              title='Sender' \r\n              subTitle='Filter by gender' \r\n              setValue={setGender}\r\n              value={gender} \r\n            />  \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <List>\r\n          {results.map(el => (<React.Fragment key={el.id} >\r\n              <ListItem  imgSrc={el.image}\r\n                imgAlt={el.name} \r\n                title={el.name} \r\n                textBold={el.species} \r\n                text={el.location.name} \r\n                subTitle={el.status} \r\n                date={el.created}\r\n                text1={`The species of the character: ${el.species}`}\r\n                text2={`The gender of the character: ${el.gender}`}\r\n                text3={`Name and link to the character's origin location: ${el.origin.name}`}\r\n                text4={`Name and link to the character's last known location endpoint: ${el.location.name}`}\r\n              />   \r\n            </React.Fragment>))}\r\n        </List>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\nexport default Characters;","D:\\FilmApi\\project\\src\\components\\EpisodesPage\\index.js",["177","178"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EPISODE_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableApp from '../UI/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst Episodes = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [name, setName] = useState('');\r\n  const [episode, setEpisode] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.episode.pages);\r\n  const count = useSelector(state => state.episode.count);\r\n  const results = useSelector(state => state.episode.results); // []\r\n\r\n  useEffect(() => {\r\n    dispatch({type: EPISODE_FETCH, page, name, episode})\r\n  }, [page, name, episode]);\r\n\r\n  // filter\r\n  const nameArr = results.map(el => el.name);\r\n  const episodeArr = results.map(el => el.episode);\r\n\r\n  // table\r\n  const tableTitleArr = ['The name of the episode', 'The air date of the episode', 'The code of the episode', 'Time at which the episode was created in the database'];\r\n  const tableArr = React.useMemo(() => {\r\n    return results.map(el => ({name: el.name, air_date: el.air_date, episode: el.episode, created: el.created}))\r\n  },[results]);\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={nameArr} \r\n              title='Name' \r\n              subTitle='Filter by name' \r\n              setValue={setName}\r\n              value={name} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={episodeArr} \r\n              title='Episode' \r\n              subTitle='Filter by episode' \r\n              setValue={setEpisode}\r\n              value={episode} \r\n            />    \r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TableApp rows={tableArr} arr={tableTitleArr}>\r\n          {row => (<React.Fragment key={row.id}>\r\n              <TableCell>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.air_date}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.episode}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.created}\r\n              </TableCell></React.Fragment>)}\r\n        </TableApp>\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\nexport default Episodes;","D:\\FilmApi\\project\\src\\components\\LocationsPage\\index.js",["179","180","181","182","183","184","185","186","187","188","189","190"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EPISODE_FETCH } from '../../redux/actionTypes';\r\nimport Progress from '../UI/Progress';\r\nimport AlertApp from '../UI/Alert';\r\nimport Pagination from '../UI/Pagination';\r\nimport Select from '../UI/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableApp from '../UI/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst Locations = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [name, setName] = useState('');\r\n  const [episode, setEpisode] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const pending = useSelector(state => state.all.pending);\r\n  const error = useSelector(state => state.all.error);\r\n  const pages = useSelector(state => state.episode.pages);\r\n  const count = useSelector(state => state.episode.count);\r\n  const results = useSelector(state => state.episode.results); // []\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({type: EPISODE_FETCH, page, name, episode})\r\n  // }, [page, name, episode]);\r\n\r\n  // // filter\r\n  // const nameArr = results.map(el => el.name);\r\n  // const episodeArr = results.map(el => el.episode);\r\n\r\n  // // table\r\n  // const tableTitleArr = ['The name of the episode', 'The air date of the episode', 'The code of the episode', 'Time at which the episode was created in the database'];\r\n  // const tableArr = React.useMemo(() => {\r\n  //   return results.map(el => ({name: el.name, air_date: el.air_date, episode: el.episode, created: el.created}))\r\n  // },[results]);\r\n\r\n  return (\r\n    <main>\r\n      {pending ? (<Progress />) : error ? (<AlertApp />) : (<>\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} sm={4}>\r\n            <Select arr={nameArr} \r\n              title='Name' \r\n              subTitle='Filter by name' \r\n              setValue={setName}\r\n              value={name} \r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Select arr={episodeArr} \r\n              title='Episode' \r\n              subTitle='Filter by episode' \r\n              setValue={setEpisode}\r\n              value={episode} \r\n            />    \r\n          </Grid> */}\r\n        </Grid>\r\n\r\n        {/* <TableApp rows={tableArr} arr={tableTitleArr}>\r\n          {row => (<React.Fragment key={row.id}>\r\n              <TableCell>\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.air_date}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.episode}\r\n              </TableCell>\r\n              <TableCell>\r\n                {row.created}\r\n              </TableCell></React.Fragment>)}\r\n        </TableApp> */}\r\n      \r\n        <Pagination page={page} setPage={setPage} maxPage={pages}/>\r\n      </>)}\r\n    </main>\r\n  ); \r\n}\r\n\r\nexport default Locations;","D:\\FilmApi\\project\\src\\components\\ProfilePage\\index.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Select.js",[],"D:\\FilmApi\\project\\src\\components\\UI\\Card.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\ListItem.js",[],"D:\\FilmApi\\project\\src\\components\\CharactersPage\\Modal.js",[],"D:\\FilmApi\\project\\src\\redux\\reducers\\episodeReducer.js",["191"],"import React from 'react'\r\n// import { SET_CHARACTER, SET_IS_LOADING, SET_ERROR_MESS } from '../actionTypes/index';\r\nimport { SET_EPISODE } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    // pending: false,\r\n    // error: '',\r\n    pages: 0,\r\n    count: 0,\r\n    results: [\r\n        // {\r\n        //     id: 1,\r\n        //     name: \"Pilot\",\r\n        //     air_date: \"December 2, 2013\",\r\n        //     episode: \"S01E01\",\r\n        //     characters: [\r\n        //         \"https://rickandmortyapi.com/api/character/1\",\r\n        //         \"https://rickandmortyapi.com/api/character/2\",\r\n        //         \"https://rickandmortyapi.com/api/character/435\"\r\n        //     ],\r\n        //     url: \"https://rickandmortyapi.com/api/episode/1\",\r\n        //     created: \"2017-11-10T12:56:33.798Z\"\r\n        // },\r\n    ],\r\n};\r\n\r\nexport default function episodeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_EPISODE:\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                pages: action.payload.info.pages,\r\n                count: action.payload.info.count,\r\n                results: [...action.payload.results],     // []  20\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// \r\n// results: [\r\n//     {\r\n//     id: 1,\r\n//     name: \"Pilot\",\r\n//     air_date: \"December 2, 2013\",\r\n//     episode: \"S01E01\",\r\n//     characters: [\r\n//         \"https://rickandmortyapi.com/api/character/1\",\r\n//         \"https://rickandmortyapi.com/api/character/2\",\r\n//         \"https://rickandmortyapi.com/api/character/35\",\r\n//         \"https://rickandmortyapi.com/api/character/38\",\r\n//         \"https://rickandmortyapi.com/api/character/62\",\r\n//         \"https://rickandmortyapi.com/api/character/92\",\r\n//         \"https://rickandmortyapi.com/api/character/127\",\r\n//         \"https://rickandmortyapi.com/api/character/144\",\r\n//         \"https://rickandmortyapi.com/api/character/158\",\r\n//         \"https://rickandmortyapi.com/api/character/175\",\r\n//         \"https://rickandmortyapi.com/api/character/179\",\r\n//         \"https://rickandmortyapi.com/api/character/181\",\r\n//         \"https://rickandmortyapi.com/api/character/239\",\r\n//         \"https://rickandmortyapi.com/api/character/249\",\r\n//         \"https://rickandmortyapi.com/api/character/271\",\r\n//         \"https://rickandmortyapi.com/api/character/338\",\r\n//         \"https://rickandmortyapi.com/api/character/394\",\r\n//         \"https://rickandmortyapi.com/api/character/395\",\r\n//         \"https://rickandmortyapi.com/api/character/435\"\r\n//     ],\r\n//     url: \"https://rickandmortyapi.com/api/episode/1\",\r\n//     created: \"2017-11-10T12:56:33.798Z\"\r\n// },","D:\\FilmApi\\project\\src\\redux\\reducers\\allReducer.js",["192"],"import React from 'react'\r\nimport { SET_IS_LOADING, SET_ERROR_MESS } from '../actionTypes/index';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    error: '',\r\n};\r\n\r\nexport default function allReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                pending: !state.pending,\r\n            };\r\n        case SET_ERROR_MESS:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\FilmApi\\project\\src\\redux\\sagas\\episodeSaga.js",["193"],"import React from \"react\"\r\nimport { call, put } from 'redux-saga/effects'\r\nimport { episodeFetch } from \"../../api\"\r\nimport { SET_EPISODE, SET_IS_LOADING, SET_ERROR_MESS } from \"../actionTypes\"\r\n\r\nexport function* episodeSaga({page, name, episode}) {\r\n    const encodeName = encodeURI(name);\r\n    const encodeEpisode = encodeURI(episode);\r\n\r\n    yield put({ type: SET_IS_LOADING })\r\n    try {\r\n        const response = yield call(episodeFetch, page, encodeName, encodeEpisode)\r\n        debugger\r\n        // info.pages\r\n        // info.count\r\n        // results.                // [] 20 \r\n        \r\n        if (response.status === 200) {\r\n            yield put({ type: SET_EPISODE, payload: response.data })\r\n        } else {\r\n            yield put({ type: SET_ERROR_MESS, payload: response.data.message })\r\n        }\r\n    }\r\n    catch(error) {\r\n        yield put({ type: SET_ERROR_MESS, payload: error.response.data.message })\r\n    }\r\n        yield put({ type: SET_IS_LOADING})\r\n}","D:\\FilmApi\\project\\src\\components\\UI\\Table.js",[],{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"198","replacedBy":"202"},{"ruleId":"200","replacedBy":"203"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"204","line":20,"column":9,"nodeType":"196","messageId":"197","endLine":20,"endColumn":16},{"ruleId":"194","severity":1,"message":"205","line":23,"column":9,"nodeType":"196","messageId":"197","endLine":23,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":29,"column":6,"nodeType":"208","endLine":29,"endColumn":37,"suggestions":"209"},{"ruleId":"194","severity":1,"message":"205","line":21,"column":9,"nodeType":"196","messageId":"197","endLine":21,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":26,"column":6,"nodeType":"208","endLine":26,"endColumn":27,"suggestions":"210"},{"ruleId":"194","severity":1,"message":"211","line":1,"column":26,"nodeType":"196","messageId":"197","endLine":1,"endColumn":35},{"ruleId":"194","severity":1,"message":"212","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":23},{"ruleId":"194","severity":1,"message":"213","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":14},{"ruleId":"194","severity":1,"message":"214","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},{"ruleId":"194","severity":1,"message":"215","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":17},{"ruleId":"194","severity":1,"message":"216","line":14,"column":10,"nodeType":"196","messageId":"197","endLine":14,"endColumn":14},{"ruleId":"194","severity":1,"message":"217","line":14,"column":16,"nodeType":"196","messageId":"197","endLine":14,"endColumn":23},{"ruleId":"194","severity":1,"message":"218","line":15,"column":10,"nodeType":"196","messageId":"197","endLine":15,"endColumn":17},{"ruleId":"194","severity":1,"message":"219","line":15,"column":19,"nodeType":"196","messageId":"197","endLine":15,"endColumn":29},{"ruleId":"194","severity":1,"message":"220","line":16,"column":9,"nodeType":"196","messageId":"197","endLine":16,"endColumn":17},{"ruleId":"194","severity":1,"message":"205","line":21,"column":9,"nodeType":"196","messageId":"197","endLine":21,"endColumn":14},{"ruleId":"194","severity":1,"message":"221","line":22,"column":9,"nodeType":"196","messageId":"197","endLine":22,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":13},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],"'classes' is assigned a value but never used.","'count' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],["225"],"'useEffect' is defined but never used.","'EPISODE_FETCH' is defined but never used.","'Select' is defined but never used.","'TableApp' is defined but never used.","'TableCell' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'episode' is assigned a value but never used.","'setEpisode' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'results' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [page, species, status, gender, dispatch]",{"range":"230","text":"231"},"Update the dependencies array to be: [page, name, episode, dispatch]",{"range":"232","text":"233"},[1110,1141],"[page, species, status, gender, dispatch]",[1043,1064],"[page, name, episode, dispatch]"]